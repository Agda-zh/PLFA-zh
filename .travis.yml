# Use new container infrastructure to enable caching
sudo: false

language: ruby

# Caching so the next build will be fast too.
cache:
  bundler: true
  timeout: 1500
  directories:
  - .versions
  - $HOME/.stack
  - $HOME/.agda
  - $HOME/.local
  - $HOME/agda-$AGDA_VERSION
  - $HOME/agda-stdlib-$AGDA_STDLIB_VERSION
  - $HOME/acknowledgements-master

# Ensure necessary system libraries are present
addons:
  apt:
    packages:
      - epubcheck
      - libgmp-dev
      - libicu-dev

# Ensure we run BASH and not SH
env:
  - SH=bash

install:
# Install Stack:
- mkdir -p ~/.local/bin
- export PATH=$HOME/.local/bin:$PATH
- travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
# Install Pandoc:
- travis_retry curl -L https://github.com/jgm/pandoc/releases/download/2.9.2.1/pandoc-2.9.2.1-1-amd64.deb -o $HOME/pandoc.deb && sudo dpkg -i $HOME/pandoc.deb
# Install agda, agda-stdlib, and acknowledgements:
- travis_wait 60 make travis-install-agda
- make travis-install-agda-stdlib
- make travis-install-acknowledgements
- ruby -S bundle install

script:
- agda --version
- acknowledgements --version
- pandoc --version
- acknowledgements -i _config.yml >> _config.yml
- make build         # build website
- make build-history # build previous releases
- make test-offline  # test website
- make epub          # build EPUB
- make epubcheck     # test EPUB

before_deploy:
- make clean
- rm -rf hs/ epub/ extra/ papers/ .bundle/ vendor/ .versions/ *.agda-lib **/*.lagda.md **/*.sh Guardfile Gemfile Gemfile.lock Makefile .gitignore .travis.yml

# before_deploy: |
#   if ! [[ $BEFORE_DEPLOY_RUN ]]; then
#     export BEFORE_DEPLOY_RUN=1 &&
#     acknowledgements -i _config.yml >> _config.yml &&
#     make clean &&
#     rm -rf hs/ extra/ depr/ papers/ slides/ .bundle/ vendor/ *.agdai *.agda-lib *.lagda.md Guardfile Gemfile Gemfile.lock Makefile highlight.sh .gitignore .travis.yml;
#   else
#     sed -i 's/^baseurl\:\s*".*"$/baseurl: ""/g ; s/^url\:\s*".*"$/url: "https:\/\/plfa-zh.github.io"/g' _config.yml;
#   fi

branches:
  only:
  - dev

git:
  depth: 1

deploy:
  - provider: pages
    skip-cleanup: true
    github-token: $GITHUB_TOKEN
    target-branch: master
    edge: true
    on:
      branch: dev

  # - provider: pages
  #   skip-cleanup: true
  #   github-token: $GITHUB_TOKEN
  #   repo: plfa-zh/plfa-zh.github.io
  #   target-branch: master
  #   edge: true
  #   on:
  #     branch: dev
